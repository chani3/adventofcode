#!/usr/bin/ruby

data = nil
if ARGV.length > 0
    filename = ARGV[0]
    File.open(filename, "r") { |file|
        data = file.readlines
    }
else
    data = DATA.readlines
end

list = data[0].chomp.split('').map(&:to_i)

basePattern = [0, 1, 0, -1]

def generatePattern(basePattern, pos, length)
    pattern = Array.new(length) { |i| basePattern[((i+1)/(pos+1))%4] }
end

def applyPatternToIndex(basePattern, list, i)
    pattern = generatePattern(basePattern, i, list.length)
    #p "pattern for #{i}: #{pattern}"
    value = list.zip(pattern).sum(0) { |e| e[0] * e[1] }
    value.abs % 10
end

def applyPatternToList(basePattern, list)
    newList = list.map.with_index { |e, i|
        applyPatternToIndex(basePattern, list, i)
    }
end

p list
100.times { list = applyPatternToList(basePattern, list) }
p list

__END__

